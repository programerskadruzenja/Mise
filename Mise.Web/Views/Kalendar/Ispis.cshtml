@model Mise.Web.ViewModels.Ispis.IspisVM

@{
    ViewBag.Title = "Ispis";
}


<h2>Ispis</h2>


<link href="~/Content/easy-autocomplete.css" rel="stylesheet" />
<script src="~/Scripts/jquery.easy-autocomplete.min.js"></script>

<link href="~/Content/jquery-ui.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui.min.js"></script>
<script src="~/Scripts/datepicker-hr.js"></script>



<script>

    var osobaOption = {
        url: function (phrase) {
            return '@Url.Action("Search", "Osobe")';
        },

        getValue: function (element) {
            return element.PunoIme;
        },


        ajaxSettings: {
            dataType: "json",
            method: "POST",
            data: {
                dataType: "json"
            }
        },

        preparePostData: function (data) {
            data.term = $("#Narucitelj").val();
            return data;
        },
        
        requestDelay: 200,
        adjustWidth: true,
        list: {
            maxNumberOfElements: 15,
            onSelectItemEvent: function () {
                var itemData = $("#Narucitelj").getSelectedItemData();
                $("#NaruciteljID").val(itemData.Id);

            }
        }
    };



    $(document).ready(function () {

        $("#Narucitelj").easyAutocomplete(osobaOption);

        $("#odDatuma").datepicker($.datepicker.regional["hr"]);

        $("#doDatuma").datepicker($.datepicker.regional["hr"]);

    });

   


 </script>





@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Ispis</h4>
        @*<hr />*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.odDatuma, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.odDatuma, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.odDatuma, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.doDatuma, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.doDatuma, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.doDatuma, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.NaruciteljID)
            @Html.LabelFor(model => model.Narucitelj, htmlAttributes: new { @class = "control-label col-md-2" })
          
            <div class="col-md-10">
                @Html.EditorFor(model => model.Narucitelj, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NaruciteljID, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.Narucitelj, "", new { @class = "text-danger" })
                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MjId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.MjId, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.MjId, new SelectList(Model.Mjesto,"Value", "Text", Model.MjId),  new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MjId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
